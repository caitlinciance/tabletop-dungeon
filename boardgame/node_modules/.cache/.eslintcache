[{"/Users/caitlinciance/Desktop/NucampFolder/3-React/tabletop-dungeon/boardgame/src/index.js":"1","/Users/caitlinciance/Desktop/NucampFolder/3-React/tabletop-dungeon/boardgame/src/App.js":"2","/Users/caitlinciance/Desktop/NucampFolder/3-React/tabletop-dungeon/boardgame/src/reportWebVitals.js":"3","/Users/caitlinciance/Desktop/NucampFolder/3-React/tabletop-dungeon/boardgame/src/components/MainCompontent.js":"4","/Users/caitlinciance/Desktop/NucampFolder/3-React/tabletop-dungeon/boardgame/src/components/HeaderComponent.js":"5","/Users/caitlinciance/Desktop/NucampFolder/3-React/tabletop-dungeon/boardgame/src/components/DirectoryComponent.js":"6"},{"size":547,"mtime":1617897868295,"results":"7","hashOfConfig":"8"},{"size":380,"mtime":1619280160769,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1617897720623,"results":"10","hashOfConfig":"8"},{"size":306,"mtime":1619280208733,"results":"11","hashOfConfig":"8"},{"size":3983,"mtime":1619203737373,"results":"12","hashOfConfig":"8"},{"size":1752,"mtime":1619282247675,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1d9gpr1",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/caitlinciance/Desktop/NucampFolder/3-React/tabletop-dungeon/boardgame/src/index.js",[],["28","29"],"/Users/caitlinciance/Desktop/NucampFolder/3-React/tabletop-dungeon/boardgame/src/App.js",[],"/Users/caitlinciance/Desktop/NucampFolder/3-React/tabletop-dungeon/boardgame/src/reportWebVitals.js",[],"/Users/caitlinciance/Desktop/NucampFolder/3-React/tabletop-dungeon/boardgame/src/components/MainCompontent.js",[],"/Users/caitlinciance/Desktop/NucampFolder/3-React/tabletop-dungeon/boardgame/src/components/HeaderComponent.js",["30"],"import React, { Component } from \"react\";\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavbarToggler,\n  Collapse,\n  NavItem,\n  Jumbotron,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\nimport { Switch, NavLink, BrowserRouter as Router} from \"react-router-dom\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleNav = this.toggleNav.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n    };\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen,\n    });\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModelOpen,\n    });\n  }\n\n  handleLogin(event) {\n    alert(\n      `Username: ${this.username.value} Password: ${this.password.value} Remember: ${this.remember.checked}`\n    );\n    this.toggleModal();\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Jumbotron fluid>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <h1>TableTop Dungeon</h1>\n              </div>\n            </div>\n          </div>\n        </Jumbotron>\n        <Router>\n        <Navbar dark sticky=\"top\" expand=\"md\">\n          <div className=\"container\">\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\n              <img\n                src=\"../public/assets/horizontal-logo.png\"\n                height=\"30\"\n                width=\"30\"\n                alt=\"Tabletop Logo\"\n              />\n            </NavbarBrand>\n            <NavbarToggler onClick={this.toggleNav} />\n            <Collapse isOpen={this.state.isNavOpen} navbar>\n              <Nav navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/home\">\n                    <i className=\"fa fa-home fa-lg \" /> Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/directory\">\n                    <i className=\"fa fa-list fa-lg \" /> Game Directory\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              <span className=\"navbar-text ml-auto\">\n                <Button outline onClick={this.toggleModal}>\n                  <i className=\"fa fa-sign-in fa-lg\" /> Login\n                </Button>\n              </span>\n            </Collapse>\n          </div>\n        </Navbar>\n        </Router>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.handleLogin}>\n              <FormGroup>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  innerRef={(input) => (this.username = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  innerRef={(input) => (this.password = input)}\n                />\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"checkbox\"\n                    name=\"remember\"\n                    innerRef={(input) => (this.remember = input)}\n                  />\n                  Remember me\n                </Label>\n              </FormGroup>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Login\n              </Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;\n","/Users/caitlinciance/Desktop/NucampFolder/3-React/tabletop-dungeon/boardgame/src/components/DirectoryComponent.js",["31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":19,"column":10,"nodeType":"38","messageId":"39","endLine":19,"endColumn":16},{"ruleId":"40","severity":2,"message":"41","line":13,"column":38,"nodeType":"38","messageId":"42","endLine":13,"endColumn":42},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-undef","'Game' is not defined.","undef","no-global-assign","no-unsafe-negation"]